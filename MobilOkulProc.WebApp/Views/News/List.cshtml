@using MobilOkulProc.Entities.Concrete
@using MobilOkulProc.WebApp.ViewModels
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Core.Fluent
@model NewsViewModel<NEWS>

@{
    ViewData["Title"] = "List News";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("List", "News", FormMethod.Get))
{
    <input type="text" name="Search" placeholder="Ara" />

    <input id="Ara" name="Ara" type="submit" value="Ara" class="
               btn btn-default" onclick="SearchClick()" />

}

<p>
    @Html.ActionLink("+Yeni", "Add")
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Mesajlar.Nesne.NewsDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Mesajlar.Nesne.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Mesajlar.Nesne.NewsContent)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Mesajlar.Nesne.ImageUrl)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Mesajlar.Nesne.Educational_Institution.EducationalName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Mesajlar.Nesne.School.SchoolName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Mesajlar.Nesne.User.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Mesajlar.Nesne.Status)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.PagedList)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.NewsDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NewsContent)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ImageUrl)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Educational_Institution.EducationalName)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.School.SchoolName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.ActionLink("Düzenle", "Edit", new { id = item.ObjectID }) |
                @Html.ActionLink("Görüntüle", "Details", new { id = item.ObjectID }) |
                @Html.ActionLink("Sil", "Delete", new { id = item.ObjectID })
            </td>
        </tr>
        }
    </tbody>
</table>
<p>
    <div class="input-group">
        @if (Model.Mesajlar != null)
        {
            if (Model.Mesajlar.Mesaj != null)
            {
                <div class="alert alert-@Model.Mesajlar.Status" role="alert">@Model.Mesajlar.Mesaj</div>
            }


        }
    </div>
    <br />

</p>

<script>
    function SearchClick(theButton) {
        document.getElementById('Search').value = theButton.name;
        return true;
    }
</script>

@Html.PagedListPager(Model.PagedList, page => Url.Action("List", "News", new { page, Search = Context.Request.Query["Search"] }))



